{"remainingRequest":"/Users/kscissorfootdoctor/Desktop/Mine-Project/Book_Web_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kscissorfootdoctor/Desktop/Mine-Project/Book_Web_App/src/views/store/storeShelf.vue?vue&type=style&index=0&id=3a37f451&scoped=true&lang=scss&","dependencies":[{"path":"/Users/kscissorfootdoctor/Desktop/Mine-Project/Book_Web_App/src/views/store/storeShelf.vue","mtime":1589131084737},{"path":"/Users/kscissorfootdoctor/Desktop/Mine-Project/Book_Web_App/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Mine-Project/Book_Web_App/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Mine-Project/Book_Web_App/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Mine-Project/Book_Web_App/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Mine-Project/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Mine-Project/Book_Web_App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiLi4vLi4vYXNzZXRzL3N0eWxlcy9nbG9iYWwiOwoKLnN0b3JlLXNoZWxmIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgei1pbmRleDogMTAwOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICBiYWNrZ3JvdW5kOiB3aGl0ZTsKCiAgLnNoZWxmLXNjcm9sbCB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDA7CiAgICBsZWZ0OiAwOwogICAgei1pbmRleDogMTAxOwogIH0KfQoK"},{"version":3,"sources":["storeShelf.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"storeShelf.vue","sourceRoot":"src/views/store","sourcesContent":["<template>\n  <div class=\"store-shelf\">\n    <shelf-title></shelf-title>\n    <scroll :top=\"0\" class=\"shelf-scroll\">\n      <shelf-search></shelf-search>\n    </scroll>\n  </div>\n</template>\n\n<script>\nimport ShelfTitle from '../../components/shelf/shelfTitle'\nimport { storeShelfMixin } from '../../utils/mixin'\nimport Scroll from '../../components/common/scroll'\nimport ShelfSearch from '../../components/shelf/shelfSearch'\nimport { shelf } from '../../api/store'\n\nexport default {\n  mixins: [storeShelfMixin],\n  name: 'storeShelf',\n  components: { ShelfSearch, Scroll, ShelfTitle },\n  methods: {\n    getShelfList () {\n      shelf().then((res) => {\n        if (res.status === 200 && res.data && res.data.bookList) {\n          this.setShelfList(res.data.bookList)\n        }\n      })\n    }\n  },\n  mounted () {\n    this.getShelfList()\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  @import \"../../assets/styles/global\";\n\n  .store-shelf {\n    position: relative;\n    z-index: 100;\n    width: 100%;\n    height: 100%;\n    background: white;\n\n    .shelf-scroll {\n      position: absolute;\n      top: 0;\n      left: 0;\n      z-index: 101;\n    }\n  }\n\n</style>\n"]}]}