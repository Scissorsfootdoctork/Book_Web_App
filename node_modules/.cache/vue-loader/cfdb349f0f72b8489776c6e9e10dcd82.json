{"remainingRequest":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/views/store/StoreList.vue?vue&type=style&index=0&id=33dd3da7&lang=scss&rel=stylesheet%2Fscss&scoped=true&","dependencies":[{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/views/store/StoreList.vue","mtime":1589128627616},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9zdHlsZXMvZ2xvYmFsIjsKCi5ib29rLWxpc3Qtd3JhcHBlciB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIGJhY2tncm91bmQ6IHdoaXRlOwp9Cg=="},{"version":3,"sources":["StoreList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;;AAEA;AACA;AACA;AACA;AACA","file":"StoreList.vue","sourceRoot":"src/views/store","sourcesContent":["<template>\n  <div class=\"book-list-wrapper\">\n    <detail-title :title=\"title\"\n                  :showShelf=\"true\"\n                  @back=\"back\"\n                  ref=\"title\"></detail-title>\n    <scroll class=\"book-list-scroll-wrapper\"\n            :top=\"42\"\n            @onScroll=\"onScroll\"\n            ref=\"scroll\">\n      <featured :data=\"value\" :titleText=\"titleText ? titleText : getCategoryText(key)\" :btnText=\"''\" v-for=\"(value, key, index) in list\"\n                :key=\"index\"></featured>\n    </scroll>\n  </div>\n</template>\n\n<script>\nimport DetailTitle from '../../components/detail/DetaiTitle'\nimport Scroll from '../../components/common/scroll'\nimport Featured from '../../components/home/Featured'\nimport { realPx } from '../../utils/utils'\nimport { list } from '../../api/store'\nimport { categoryList, categoryText } from '../../utils/store'\n\nexport default {\n  components: {\n    DetailTitle,\n    Scroll,\n    Featured\n  },\n  computed: {\n    title () {\n      if (this.list) {\n        return this.total && this.$t('home.allBook').replace('$1', this.totalNumber)\n      } else {\n        return null\n      }\n    },\n    totalNumber () {\n      let num = 0\n      Object.keys(this.list).forEach(key => {\n        num += this.list[key].length\n      })\n      return num\n    }\n  },\n  data () {\n    return {\n      list: null,\n      total: null\n    }\n  },\n  methods: {\n    getCategoryText (key) {\n      return `${categoryText(categoryList[key], this)}(${this.list[key].length})`\n    },\n    back () {\n      this.$router.go(-1)\n    },\n    onScroll (offsetY) {\n      if (offsetY > realPx(42)) {\n        this.$refs.title.showShadow()\n      } else {\n        this.$refs.title.hideShadow()\n      }\n    },\n    getList () {\n      list().then(response => {\n        this.list = response.data.data\n        this.total = response.data.total\n        const category = this.$route.query.category\n        const keyword = this.$route.query.keyword\n        if (category) {\n          const key = Object.keys(this.list).filter(item => item === category)[0]\n          const data = this.list[key]\n          this.list = {}\n          this.list[key] = data\n        } else if (keyword) {\n          Object.keys(this.list).filter(key => {\n            this.list[key] = this.list[key].filter(book => book.fileName.indexOf(keyword) >= 0)\n            return this.list[key].length > 0\n          })\n        }\n      })\n    }\n  },\n  created () {\n    this.getList()\n    this.titleText = this.$route.query.categoryText\n  }\n}\n</script>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n  @import \"../../assets/styles/global\";\n\n  .book-list-wrapper {\n    width: 100%;\n    height: 100%;\n    background: white;\n  }\n</style>\n"]}]}