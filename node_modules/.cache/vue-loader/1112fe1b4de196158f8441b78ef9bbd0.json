{"remainingRequest":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/components/ebook/EbookSettingProgress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/components/ebook/EbookSettingProgress.vue","mtime":1541580605000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ebookMixin } from '../../utils/mixin'\nimport { saveProgress } from '../../utils/localStorage'\n\nexport default {\n  mixins: [ebookMixin],\n  data() {\n    return {\n      isProgressLoading: false\n    }\n  },\n  methods: {\n    prevSection() {\n      if (this.section > 0 && !this.isProgressLoading) {\n        this.isProgressLoading = true\n        this.setSection(this.section - 1).then(() => {\n          this.displaySection(() => {\n            this.updateProgressBg()\n            this.isProgressLoading = false\n          })\n        })\n      }\n    },\n    nextSection() {\n      if (this.currentBook.spine.length - 1 > this.section && !this.isProgressLoading) {\n        this.isProgressLoading = true\n        this.setSection(this.section + 1).then(() => {\n          this.displaySection(() => {\n            this.updateProgressBg()\n            this.isProgressLoading = false\n          })\n        })\n      }\n    },\n    onProgressInput(progress) {\n      this.setProgress(progress).then(() => {\n        this.updateProgressBg()\n      })\n    },\n    onProgressChange(progress) {\n      this.setProgress(progress).then(() => {\n        this.updateProgressBg()\n        this.displayProgress()\n      })\n      saveProgress(this.fileName, progress)\n    },\n    updateProgressBg() {\n      this.$refs.progress.style.backgroundSize = `${this.progress}% 100%`\n    }\n  },\n  updated() {\n    this.$refs.progress.style.backgroundSize = `${this.progress}% 100%`\n  }\n}\n",{"version":3,"sources":["EbookSettingProgress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EbookSettingProgress.vue","sourceRoot":"src/components/ebook","sourcesContent":["<template>\n  <transition name=\"slide-up\">\n    <div class=\"setting-wrapper\" v-show=\"menuVisible && settingVisible === 2\">\n      <div class=\"setting-progress\">\n        <div class=\"read-time-wrapper\">\n          <span class=\"read-time-text\">{{getReadTime()}}</span>\n          <span class=\"icon-forward\"></span>\n        </div>\n        <div class=\"progress-wrapper\">\n          <div class=\"progress-icon-wrapper\">\n            <span class=\"icon-back\" @click=\"prevSection()\"></span>\n          </div>\n          <input class=\"progress\" type=\"range\"\n                 max=\"100\"\n                 min=\"0\"\n                 step=\"1\"\n                 @input=\"onProgressInput($event.target.value)\"\n                 @change=\"onProgressChange($event.target.value)\"\n                 :value=\"progress\"\n                 :disabled=\"!bookAvailable\"\n                 ref=\"progress\">\n          <div class=\"progress-icon-wrapper\" @click=\"nextSection()\">\n            <span class=\"icon-forward\"></span>\n          </div>\n        </div>\n        <div class=\"text-wrapper\">\n          <span class=\"progress-section-text\">{{getSectionName}}</span>\n          <span class=\"progress-text\">({{bookAvailable ? progress + '%' : $t('book.loading')}})</span>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import { ebookMixin } from '../../utils/mixin'\n  import { saveProgress } from '../../utils/localStorage'\n\n  export default {\n    mixins: [ebookMixin],\n    data() {\n      return {\n        isProgressLoading: false\n      }\n    },\n    methods: {\n      prevSection() {\n        if (this.section > 0 && !this.isProgressLoading) {\n          this.isProgressLoading = true\n          this.setSection(this.section - 1).then(() => {\n            this.displaySection(() => {\n              this.updateProgressBg()\n              this.isProgressLoading = false\n            })\n          })\n        }\n      },\n      nextSection() {\n        if (this.currentBook.spine.length - 1 > this.section && !this.isProgressLoading) {\n          this.isProgressLoading = true\n          this.setSection(this.section + 1).then(() => {\n            this.displaySection(() => {\n              this.updateProgressBg()\n              this.isProgressLoading = false\n            })\n          })\n        }\n      },\n      onProgressInput(progress) {\n        this.setProgress(progress).then(() => {\n          this.updateProgressBg()\n        })\n      },\n      onProgressChange(progress) {\n        this.setProgress(progress).then(() => {\n          this.updateProgressBg()\n          this.displayProgress()\n        })\n        saveProgress(this.fileName, progress)\n      },\n      updateProgressBg() {\n        this.$refs.progress.style.backgroundSize = `${this.progress}% 100%`\n      }\n    },\n    updated() {\n      this.$refs.progress.style.backgroundSize = `${this.progress}% 100%`\n    }\n  }\n</script>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n  @import \"../../assets/styles/global\";\n\n  .setting-wrapper {\n    position: absolute;\n    bottom: px2rem(48);\n    left: 0;\n    z-index: 190;\n    width: 100%;\n    height: px2rem(90);\n    box-shadow: 0 px2rem(-8) px2rem(8) rgba(0, 0, 0, .15);\n    .setting-progress {\n      position: relative;\n      width: 100%;\n      height: 100%;\n      .read-time-wrapper {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: px2rem(40);\n        @include center;\n        font-size: px2rem(12);\n      }\n      .progress-wrapper {\n        width: 100%;\n        height: 100%;\n        @include center;\n        padding: 0 px2rem(15);\n        box-sizing: border-box;\n        .progress {\n          flex: 1;\n          width: 100%;\n          -webkit-appearance: none;\n          height: px2rem(2);\n          background: -webkit-linear-gradient(#5d6268, #5d6268) no-repeat, #b4b5b7;\n          background-size: 0 100%;\n          margin: 0 px2rem(10);\n          &:focus {\n            outline: none;\n          }\n          &::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            height: px2rem(20);\n            width: px2rem(20);\n            border-radius: 50%;\n            background: #ceced0;\n            box-shadow: 0 px2rem(4) px2rem(6) 0 rgba(0, 0, 0, .15);\n            border: none;\n          }\n        }\n        .progress-icon-wrapper {\n          flex: 0 0 px2rem(22);\n          font-size: px2rem(22);\n          @include center;\n        }\n      }\n      .text-wrapper {\n        position: absolute;\n        left: 0;\n        bottom: px2rem(5);\n        width: 100%;\n        font-size: px2rem(12);\n        text-align: center;\n        padding: 0 px2rem(15);\n        box-sizing: border-box;\n        @include center;\n        .progress-section-text {\n          line-height: px2rem(15);\n          @include ellipsis;\n        }\n        .progress-text {\n        }\n      }\n    }\n  }\n</style>\n"]}]}