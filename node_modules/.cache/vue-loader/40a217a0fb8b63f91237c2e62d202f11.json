{"remainingRequest":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/views/store/bookShelf.vue?vue&type=style&index=0&id=68914469&lang=scss&rel=stylesheet%2Fscss&scoped=true&","dependencies":[{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/views/store/bookShelf.vue","mtime":1541580605000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../../assets/styles/global\";\n\n.book-shelf {\n  position: relative;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  font-size: 0;\n  .shelf-title {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 110;\n  }\n  .book-shelf-list {\n    position: absolute;\n    top: px2rem(93.5);\n    left: 0;\n    z-index: 100;\n  }\n  .book-shelf-empty {\n    position: absolute;\n    top: px2rem(42);\n    left: 0;\n    z-index: 100;\n  }\n  .book-shelf-scroll-wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 101;\n    background: white;\n  }\n  .book-shelf-scroll-wrapper2 {\n    position: absolute;\n    top: px2rem(93.5);\n    left: 0;\n    z-index: 101;\n  }\n}\n",{"version":3,"sources":["bookShelf.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgZA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bookShelf.vue","sourceRoot":"src/views/store","sourcesContent":["<template>\n  <div class=\"book-shelf\">\n    <shelf-title class=\"shelf-title\"\n                 :title=\"$t('shelf.title')\"\n                 :isEditMode.sync=\"isEditMode\"\n                 :data=\"bookList\"\n                 :ifShowBack=\"ifShowBack\"\n                 :ifShowClear=\"ifShowClear\"\n                 @onEditClick=\"onEditClick\"\n                 @clearCache=\"clearCache\"\n                 ref=\"shelfTitle\"\n                 v-show=\"ifShowTitle\"></shelf-title>\n    <scroll-view class=\"book-shelf-scroll-wrapper\"\n                 :top=\"0\"\n                 :bottom=\"scrollBottom\"\n                 :initPosition=\"initPosition\"\n                 @onScroll=\"onScroll\"\n                 ref=\"scroll\">\n      <shelf-search @onSearchClick=\"onSearchClick\"\n                    @onCancel=\"onSearchCancel\"\n                    @onTabClick=\"onSearchTabClick\"\n                    ref=\"shelfSearch\"\n                    v-if=\"!isDataEmpty\"></shelf-search>\n      <book-shelf class=\"book-shelf-list\"\n                  :data=\"bookList\"\n                  :showType=\"showType\"\n                  :isEditMode=\"isEditMode\"\n                  @onBookClick=\"onBookClick\"\n                  ref=\"bookShelf\"\n                  v-if=\"!isDataEmpty\"></book-shelf>\n      <book-shelf-empty\n                  class=\"book-shelf-empty\"\n                  v-if=\"isDataEmpty\"></book-shelf-empty>\n    </scroll-view>\n    <book-shelf-footer class=\"book-shelf-footer\"\n                       :data=\"bookList\"\n                       :bookList=\"bookList\"\n                       :isInGroup=\"false\"\n                       @setPrivate=\"setPrivate\"\n                       @setDownload=\"setDownload\"\n                       @removeBook=\"removeBook\"\n                       @groupEdit=\"groupEdit\"\n                       v-show=\"isEditMode\"></book-shelf-footer>\n    <toast :text=\"toastText\" ref=\"toast\"></toast>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import ShelfTitle from '@/components/shelf/shelfTitle'\n  import ShelfSearch from '@/components/shelf/shelfSearch'\n  import BookShelf from '@/components/shelf/shelf'\n  import ScrollView from '@/components/Scroll'\n  import BookShelfFooter from '@/components/shelf/bookShelfFooter'\n  import BookShelfEmpty from '@/components/shelf/bookShelfEmpty'\n  import Toast from '@/components/shelf/toast'\n  import { shelf, download } from '@/api/book'\n  import { getLocalStorage, setLocalStorage, clearLocalStorage } from '@/utils/localStorage'\n  import { getLocalForage, clearLocalForage } from '@/utils/localForage'\n  import { removeBookCache } from '@/utils/book'\n  import Epub from 'epubjs'\n  import { realPx } from '@/utils/utils'\n\n  global.ePub = Epub\n\n  const BOOK_SHELF_KEY = 'bookShelf'\n  export default {\n    components: {\n      ShelfTitle,\n      ShelfSearch,\n      BookShelf,\n      ScrollView,\n      BookShelfFooter,\n      BookShelfEmpty,\n      Toast\n    },\n    computed: {\n      isDataEmpty() {\n        return !this.bookList || this.bookList.filter(item => item.type !== 3).length === 0\n      }\n    },\n    data() {\n      return {\n        bookList: [],\n        ifShowTitle: true,\n        isEditMode: false,\n        ifShowBack: false,\n        ifShowClear: true,\n        scrollBottom: 0,\n        toastText: '',\n        showType: 0,\n        initPosition: {\n          x: 0,\n          y: 0\n        }\n      }\n    },\n    methods: {\n      onSearchTabClick(id) {\n        this.showType = id\n      },\n      groupEdit(operation, group) {\n        switch (operation) {\n          case 1:\n            this.moveToGroup(group)\n            break\n          case 2:\n            this.newGroup(group)\n            this.moveToGroup(group)\n            break\n          case 3:\n            this.moveOutGroup()\n            break\n        }\n      },\n      getSelectedBooks() {\n        const selectedBooks = this.bookList.filter(item => {\n          return item.selected\n        })\n        this.bookList.filter(item => {\n          if (item.type === 2 && item.itemList) {\n            item.itemList.filter(subItem => {\n              if (subItem.selected) {\n                selectedBooks.push(subItem)\n              }\n            })\n          }\n        })\n        return selectedBooks\n      },\n      clearSelectedBooks() {\n        this.bookList = this.bookList.filter(item => {\n          return !item.selected\n        })\n        this.bookList.forEach(item => {\n          if (item.type === 2 && item.itemList) {\n            item.itemList = item.itemList.filter(subItem => {\n              return !subItem.selected\n            })\n          }\n        })\n      },\n      appendBookToList(selectedBooks) {\n        let id = this.bookList[this.bookList.length - 1].id + 1\n        selectedBooks.forEach(item => {\n          item.id = id++\n          this.bookList.push(item)\n        })\n      },\n      moveOutGroup() {\n        this.clearAddFromBookList()\n        const selectedBooks = this.getSelectedBooks()\n        this.clearSelectedBooks()\n        this.appendBookToList(selectedBooks)\n        this.appendAddToBookList()\n        this.onEditClick(false)\n        this.saveBookShelfToLocalStorage()\n        this.showToast(this.$t('shelf.moveBookOutSuccess'))\n      },\n      newGroup(group) {\n        this.clearAddFromBookList()\n        this.bookList.push(group)\n        this.appendAddToBookList()\n      },\n      moveToGroup(group) {\n        const selectedBooks = this.getSelectedBooks()\n        this.clearSelectedBooks()\n        if (group && group.itemList) {\n          group.itemList = [...group.itemList, ...selectedBooks]\n          group.itemList.forEach((item, index) => {\n            item.id = index + 1\n          })\n        }\n        this.onEditClick(false)\n        this.saveBookShelfToLocalStorage()\n        this.showToast(this.$t('shelf.moveBookInSuccess').replace('$1', group.title))\n      },\n      appendAddToBookList() {\n        this.bookList.push({\n          cover: '',\n          title: '',\n          type: 3,\n          // id: this.bookList[this.bookList.length - 1].id + 1\n          id: Number.MAX_SAFE_INTEGER\n        })\n      },\n      clearAddFromBookList() {\n        this.bookList = this.bookList.filter(item => {\n          return item.type !== 3\n        })\n      },\n      removeBook() {\n        this.bookList = this.bookList.filter(item => {\n          if (item.itemList) {\n            item.itemList = item.itemList.filter(subItem => {\n              return !subItem.selected\n            })\n          }\n          return !item.selected\n        })\n        // this.$refs.bookShelf.showRemoveAnimation()\n        this.onEditClick(false)\n        this.saveBookShelfToLocalStorage()\n      },\n      clearCache() {\n        clearLocalStorage()\n        clearLocalForage(() => {\n          console.log('清除localForage成功...')\n          this.getBookShelf()\n        })\n        this.showToast(this.$t('shelf.clearCacheSuccess'))\n      },\n      onBookClick(item, index) {\n        this.$router.push({\n          path: '/book-store/detail',\n          query: {\n            fileName: item.fileName,\n            category: item.categoryText\n          }\n        })\n      },\n      showToast(text) {\n        this.toastText = text\n        this.$refs.toast.show()\n      },\n      hideToast() {\n        this.$refs.toast.hide()\n      },\n      showContinueToast(text) {\n        this.toastText = text\n        this.$refs.toast.continueShow()\n      },\n      removeDownloadBook(item) {\n        return removeBookCache(item.fileName)\n      },\n      downloadBook(item) {\n        return new Promise((resolve, reject) => {\n          getLocalForage(item.fileName, (err, value) => {\n            if (!err && value instanceof Blob) {\n              console.log(`[${item.fileName}]读取成功...`, value, new Epub(value))\n              resolve()\n            } else {\n              download(item, item => {\n                console.log('[' + item.fileName + ']下载成功...')\n                resolve()\n              }, reject, reject, progressEvent => {\n                const progress = Math.floor(progressEvent.loaded / progressEvent.total * 100) + '%'\n                this.toastText = this.$t('shelf.progressDownload').replace('$1', `${item.fileName}.epub(${progress})`)\n              })\n            }\n          })\n        })\n      },\n      async setDownload(needDownload) {\n        this.showContinueToast(this.$t('shelf.startDownload'))\n        for (let i = 0; i < this.bookList.length; i++) {\n          const item = this.bookList[i]\n          if (needDownload && item.selected) {\n            await this.downloadBook(item).then(() => {\n              item.cache = needDownload\n            })\n          } else if (!needDownload && item.selected) {\n            await this.removeDownloadBook(item).then(() => {\n              item.cache = needDownload\n            })\n          }\n          if (item.itemList) {\n            for (let i = 0; i < item.itemList.length; i++) {\n              await this.downloadItem(item.itemList[i], needDownload)\n            }\n          }\n        }\n        this.hideToast()\n        if (needDownload) {\n          this.showToast(this.$t('shelf.setDownloadSuccess'))\n        } else {\n          this.showToast(this.$t('shelf.removeDownloadSuccess'))\n        }\n        this.onEditClick(false)\n        this.saveBookShelfToLocalStorage()\n        console.log('数据保存成功...')\n      },\n      async downloadItem(subItem, needDownload) {\n        if (needDownload && subItem.selected) {\n          await this.downloadBook(subItem).then(() => {\n            subItem.cache = needDownload\n          })\n        } else if (!needDownload && subItem.selected) {\n          await this.removeDownloadBook(subItem).then(() => {\n            subItem.cache = needDownload\n          })\n        }\n      },\n      setPrivate(v) {\n        this.bookList.forEach(item => {\n          if (item.selected) {\n            item.private = v\n          }\n        })\n        this.onEditClick(false)\n        this.saveBookShelfToLocalStorage()\n        if (v) {\n          this.showToast(this.$t('shelf.setPrivateSuccess'))\n        } else {\n          this.showToast(this.$t('shelf.closePrivateSuccess'))\n        }\n      },\n      onEditClick(v) {\n        this.isEditMode = v\n        if (!this.isEditMode) {\n          this.bookList.forEach(item => {\n            if (item.bookId) {\n              item.selected = false\n            } else if (item.itemList) {\n              item.itemList.forEach(subItem => {\n                subItem.selected = false\n              })\n            }\n          })\n        }\n        if (this.isEditMode) {\n          this.scrollBottom = 48\n          this.$nextTick(() => {\n            if (this.$refs.scroll) {\n              this.$refs.scroll.refresh()\n            }\n          })\n        } else {\n          this.scrollBottom = 0\n          this.$nextTick(() => {\n            if (this.$refs.scroll) {\n              this.$refs.scroll.refresh()\n            }\n          })\n        }\n      },\n      onSearchClick() {\n        this.onEditClick(false)\n        this.showType = 1\n        this.hideTitle()\n      },\n      onSearchCancel() {\n        this.showTitle()\n        this.showType = 0\n        this.$refs.scroll.scrollTo(0, 0)\n      },\n      showTitle() {\n        this.ifShowTitle = true\n      },\n      hideTitle() {\n        this.ifShowTitle = false\n      },\n      onScroll(offsetY) {\n        if (offsetY > realPx(54)) {\n          this.$refs.shelfTitle.showShadow()\n          if (!this.ifShowTitle) {\n            this.$refs.shelfSearch.showShadow()\n          }\n        } else {\n          this.$refs.shelfTitle.hideShadow()\n          if (this.$refs.shelfSearch) {\n            this.$refs.shelfSearch.hideShadow()\n          }\n        }\n      },\n      getBookShelf() {\n        this.bookList = this.getBookShelfFromLocalStorage()\n        if (!this.bookList) {\n          shelf().then(response => {\n            this.bookList = response.data.bookList\n            if (!this.bookList) {\n              this.bookList = []\n            }\n            this.appendAddToBookList()\n            this.saveBookShelfToLocalStorage()\n            this.initBookShelf()\n          })\n        }\n        this.initBookShelf()\n      },\n      initBookShelf() {\n        if (this.bookList) {\n          this.bookList.forEach(item => {\n            item.selected = false\n          })\n        }\n      },\n      saveBookShelfToLocalStorage() {\n        setLocalStorage(BOOK_SHELF_KEY, this.bookList)\n      },\n      getBookShelfFromLocalStorage() {\n        return getLocalStorage(BOOK_SHELF_KEY)\n      }\n    },\n    mounted() {\n      this.getBookShelf()\n    }\n  }\n</script>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n  @import \"../../assets/styles/global\";\n\n  .book-shelf {\n    position: relative;\n    z-index: 100;\n    width: 100%;\n    height: 100%;\n    font-size: 0;\n    .shelf-title {\n      position: absolute;\n      left: 0;\n      top: 0;\n      z-index: 110;\n    }\n    .book-shelf-list {\n      position: absolute;\n      top: px2rem(93.5);\n      left: 0;\n      z-index: 100;\n    }\n    .book-shelf-empty {\n      position: absolute;\n      top: px2rem(42);\n      left: 0;\n      z-index: 100;\n    }\n    .book-shelf-scroll-wrapper {\n      position: absolute;\n      top: 0;\n      left: 0;\n      z-index: 101;\n      background: white;\n    }\n    .book-shelf-scroll-wrapper2 {\n      position: absolute;\n      top: px2rem(93.5);\n      left: 0;\n      z-index: 101;\n    }\n  }\n</style>\n"]}]}