{"remainingRequest":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/views/store/bookDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/views/store/bookDetail.vue","mtime":1541580605000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DetailTitle from '@/components/detail/detaiTitle'\nimport BookInfo from '@/components/detail/bookInfo'\nimport Scroll from '@/components/Scroll'\nimport Toast from '@/components/shelf/toast'\nimport { removeFromBookShelf, addToShelf } from '@/utils/book'\nimport { flatList, detail } from '@/api/book'\nimport { px2rem, realPx } from '@/utils/utils'\nimport { getLocalForage } from '@/utils/localForage'\nimport { getLocalStorage } from '@/utils/localStorage'\nimport Epub from 'epubjs'\n\nglobal.ePub = Epub\n\nexport default {\n  components: {\n    DetailTitle,\n    Scroll,\n    BookInfo,\n    Toast\n  },\n  computed: {\n    desc() {\n      if (this.description) {\n        return this.description.substring(0, 100)\n      } else {\n        return ''\n      }\n    },\n    flatNavigation() {\n      if (this.navigation) {\n        return Array.prototype.concat.apply([], Array.prototype.concat.apply([], this.doFlatNavigation(this.navigation.toc)))\n      } else {\n        return []\n      }\n    },\n    lang() {\n      return this.metadata ? this.metadata.language : '-'\n    },\n    isbn() {\n      return this.metadata ? this.metadata.identifier : '-'\n    },\n    publisher() {\n      return this.metadata ? this.metadata.publisher : '-'\n    },\n    title() {\n      return this.metadata ? this.metadata.title : ''\n    },\n    author() {\n      return this.metadata ? this.metadata.creator : ''\n    },\n    inBookShelf() {\n      if (this.bookItem && this.bookShelf) {\n        const flatShelf = (function flatten(arr) {\n          return [].concat(...arr.map(v => v.itemList ? [v, ...flatten(v.itemList)] : v))\n        })(this.bookShelf).filter(item => item.type === 1)\n        const book = flatShelf.filter(item => item.fileName === this.bookItem.fileName)\n        return book && book.length > 0\n      } else {\n        return false\n      }\n    }\n  },\n  data() {\n    return {\n      bookShelf: null,\n      bookItem: null,\n      book: null,\n      metadata: null,\n      trialRead: null,\n      cover: null,\n      navigation: null,\n      displayed: false,\n      audio: null,\n      randomLocation: null,\n      description: null,\n      toastText: '',\n      trialText: null,\n      categoryText: null,\n      opf: null\n    }\n  },\n  methods: {\n    addOrRemoveShelf() {\n      if (this.inBookShelf) {\n        removeFromBookShelf(this.bookItem)\n      } else {\n        addToShelf(this.bookItem)\n      }\n      this.bookShelf = getLocalStorage('bookShelf')\n    },\n    showToast(text) {\n      this.toastText = text\n      this.$refs.toast.show()\n    },\n    readBook() {\n      getLocalForage(this.bookItem.fileName, (err, value) => {\n        if (!err && value instanceof Blob) {\n          this.$router.push({\n            path: `/ebook/${this.bookItem.fileName}`\n          })\n        } else {\n          // this.showToast(this.$t('shelf.downloadFirst'))\n          this.$router.push({\n            path: `/ebook/${this.bookItem.fileName}`,\n            query: {\n              opf: this.opf\n            }\n          })\n        }\n      })\n    },\n    trialListening() {\n      getLocalForage(this.bookItem.fileName, (err, value) => {\n        if (!err && value instanceof Blob) {\n          this.$router.push({\n            path: '/book-store/book-speaking',\n            query: {\n              fileName: this.bookItem.fileName\n            }\n          })\n        } else {\n          // this.showToast(this.$t('shelf.downloadFirst'))\n          this.$router.push({\n            path: '/book-store/book-speaking',\n            query: {\n              fileName: this.bookItem.fileName,\n              opf: this.opf\n            }\n          })\n        }\n      })\n    },\n    read(item) {\n      getLocalForage(this.bookItem.fileName, (err, value) => {\n        if (!err && value instanceof Blob) {\n          this.$router.push({\n            path: `/ebook/${this.bookItem.fileName}`,\n            query: {\n              navigation: item.href\n            }\n          })\n        } else {\n          // this.showToast(this.$t('shelf.downloadFirst'))\n          this.$router.push({\n            path: `/ebook/${this.bookItem.fileName}`,\n            query: {\n              navigation: item.href,\n              opf: this.opf\n            }\n          })\n        }\n      })\n    },\n    itemStyle(item) {\n      return {\n        marginLeft: (item.deep - 1) * px2rem(20) + 'rem'\n      }\n    },\n    doFlatNavigation(content, deep = 1) {\n      const arr = []\n      content.forEach(item => {\n        item.deep = deep\n        arr.push(item)\n        if (item.subitems && item.subitems.length > 0) {\n          arr.push(this.doFlatNavigation(item.subitems, deep + 1))\n        }\n      })\n      return arr\n    },\n    initBook() {\n      if (this.bookItem) {\n        getLocalForage(this.bookItem.fileName, (err, blob) => {\n          if (err) {\n            this.downloadBook()\n          } else {\n            if (blob) {\n              this.parseBook(blob)\n            } else {\n              this.downloadBook()\n            }\n          }\n        })\n      }\n    },\n    downloadBook() {\n      const opf = `${process.env.VUE_APP_EPUB_URL}/${this.bookItem.categoryText}/${this.bookItem.fileName}/OEBPS/package.opf`\n      this.parseBook(opf)\n    },\n    parseBook(blob) {\n      this.book = new Epub(blob)\n      this.book.loaded.metadata.then(metadata => {\n        this.metadata = metadata\n      })\n      this.book.loaded.navigation.then(nav => {\n        this.navigation = nav\n        if (this.navigation.toc && this.navigation.toc.length > 1) {\n          this.display(this.navigation.toc[1].href)\n            .then(section => {\n              if (this.$refs.scroll) {\n                this.$refs.scroll.refresh()\n              }\n              this.displayed = true\n              const reg = new RegExp('<.+?>', 'g')\n              const text = section.output.replace(reg, '').replace(/\\s\\s/g, '')\n              this.description = text\n            })\n        }\n      })\n    },\n    findBookFromList(fileName) {\n      flatList().then(response => {\n        if (response.status === 200) {\n          const bookList = response.data.data.filter(item => item.fileName === fileName)\n          if (bookList && bookList.length > 0) {\n            this.bookItem = bookList[0]\n            console.log(this.bookItem)\n            this.initBook()\n          }\n        }\n      })\n    },\n    init() {\n      const fileName = this.$route.query.fileName\n      this.categoryText = this.$route.query.category\n      if (fileName) {\n        detail({\n          fileName: fileName\n        }).then(response => {\n          if (response.status === 200 && response.data.error_code === 0 && response.data.data) {\n            const data = response.data.data\n            this.bookItem = data\n            this.cover = this.bookItem.cover\n            let rootFile = data.rootFile\n            if (rootFile.startsWith('/')) {\n              rootFile = rootFile.substring(1, rootFile.length)\n            }\n            this.opf = `${process.env.VUE_APP_EPUB_OPF_URL}/${fileName}/${rootFile}`\n            this.parseBook(this.opf)\n          } else {\n            this.showToast(response.data.msg)\n          }\n        })\n      }\n      this.bookShelf = getLocalStorage('bookShelf')\n    },\n    back() {\n      this.$router.go(-1)\n    },\n    display(location) {\n      if (this.$refs.preview) {\n        if (!this.rendition) {\n          this.rendition = this.book.renderTo('preview', {\n            width: window.innerWidth > 640 ? 640 : window.innerWidth,\n            height: window.innerHeight,\n            method: 'default'\n          })\n        }\n        if (!location) {\n          return this.rendition.display()\n        } else {\n          return this.rendition.display(location)\n        }\n      }\n    },\n    onScroll(offsetY) {\n      if (offsetY > realPx(42)) {\n        this.$refs.title.showShadow()\n      } else {\n        this.$refs.title.hideShadow()\n      }\n    }\n  },\n  mounted() {\n    this.init()\n  }\n}\n",{"version":3,"sources":["bookDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bookDetail.vue","sourceRoot":"src/views/store","sourcesContent":["<template>\n  <div class=\"book-detail\">\n    <detail-title @back=\"back\"\n                  :showShelf=\"true\"\n                  ref=\"title\"></detail-title>\n    <scroll class=\"content-wrapper\"\n            :top=\"42\"\n            :bottom=\"52\"\n            @onScroll=\"onScroll\"\n            ref=\"scroll\">\n      <book-info :cover=\"cover\"\n                 :title=\"title\"\n                 :author=\"author\"\n                 :desc=\"desc\"></book-info>\n      <div class=\"book-detail-content-wrapper\">\n        <div class=\"book-detail-content-title\">{{$t('detail.copyright')}}</div>\n        <div class=\"book-detail-content-list-wrapper\">\n          <div class=\"book-detail-content-row\">\n            <div class=\"book-detail-content-label\">{{$t('detail.publisher')}}</div>\n            <div class=\"book-detail-content-text\">{{publisher}}</div>\n          </div>\n          <div class=\"book-detail-content-row\">\n            <div class=\"book-detail-content-label\">{{$t('detail.category')}}</div>\n            <div class=\"book-detail-content-text\">{{categoryText}}</div>\n          </div>\n          <div class=\"book-detail-content-row\">\n            <div class=\"book-detail-content-label\">{{$t('detail.lang')}}</div>\n            <div class=\"book-detail-content-text\">{{lang}}</div>\n          </div>\n          <div class=\"book-detail-content-row\">\n            <div class=\"book-detail-content-label\">{{$t('detail.ISBN')}}</div>\n            <div class=\"book-detail-content-text\">{{isbn}}</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"book-detail-content-wrapper\">\n        <div class=\"book-detail-content-title\">{{$t('detail.navigation')}}</div>\n        <div class=\"book-detail-content-list-wrapper\">\n          <div class=\"loading-text-wrapper\" v-if=\"!this.navigation\">\n            <span class=\"loading-text\">{{$t('detail.loading')}}</span>\n          </div>\n          <div class=\"book-detail-content-item-wrapper\">\n            <div class=\"book-detail-content-item\" v-for=\"(item, index) in flatNavigation\" :key=\"index\"\n                 @click=\"read(item)\">\n              <div class=\"book-detail-content-navigation-text\"\n                   :class=\"{'is-sub': item.deep> 1}\"\n                   :style=\"itemStyle(item)\"\n                   v-if=\"item.label\">{{item.label}}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"book-detail-content-wrapper\">\n        <div class=\"book-detail-content-title\">{{$t('detail.trial')}}</div>\n        <div class=\"book-detail-content-list-wrapper\">\n          <div class=\"loading-text-wrapper\" v-if=\"!this.displayed\">\n            <span class=\"loading-text\">{{$t('detail.loading')}}</span>\n          </div>\n        </div>\n        <div id=\"preview\" v-show=\"this.displayed\" ref=\"preview\"></div>\n      </div>\n    </scroll>\n    <div class=\"bottom-wrapper\">\n      <div class=\"bottom-btn\" @click.stop.prevent=\"readBook()\">{{$t('detail.read')}}</div>\n      <div class=\"bottom-btn\" @click.stop.prevent=\"trialListening()\">{{$t('detail.listen')}}</div>\n      <div class=\"bottom-btn\" @click.stop.prevent=\"addOrRemoveShelf()\">\n        <span class=\"icon-check\" v-if=\"inBookShelf\"></span>\n        {{inBookShelf ? $t('detail.isAddedToShelf') : $t('detail.addOrRemoveShelf')}}\n      </div>\n    </div>\n    <toast :text=\"toastText\" ref=\"toast\"></toast>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import DetailTitle from '@/components/detail/detaiTitle'\n  import BookInfo from '@/components/detail/bookInfo'\n  import Scroll from '@/components/Scroll'\n  import Toast from '@/components/shelf/toast'\n  import { removeFromBookShelf, addToShelf } from '@/utils/book'\n  import { flatList, detail } from '@/api/book'\n  import { px2rem, realPx } from '@/utils/utils'\n  import { getLocalForage } from '@/utils/localForage'\n  import { getLocalStorage } from '@/utils/localStorage'\n  import Epub from 'epubjs'\n\n  global.ePub = Epub\n\n  export default {\n    components: {\n      DetailTitle,\n      Scroll,\n      BookInfo,\n      Toast\n    },\n    computed: {\n      desc() {\n        if (this.description) {\n          return this.description.substring(0, 100)\n        } else {\n          return ''\n        }\n      },\n      flatNavigation() {\n        if (this.navigation) {\n          return Array.prototype.concat.apply([], Array.prototype.concat.apply([], this.doFlatNavigation(this.navigation.toc)))\n        } else {\n          return []\n        }\n      },\n      lang() {\n        return this.metadata ? this.metadata.language : '-'\n      },\n      isbn() {\n        return this.metadata ? this.metadata.identifier : '-'\n      },\n      publisher() {\n        return this.metadata ? this.metadata.publisher : '-'\n      },\n      title() {\n        return this.metadata ? this.metadata.title : ''\n      },\n      author() {\n        return this.metadata ? this.metadata.creator : ''\n      },\n      inBookShelf() {\n        if (this.bookItem && this.bookShelf) {\n          const flatShelf = (function flatten(arr) {\n            return [].concat(...arr.map(v => v.itemList ? [v, ...flatten(v.itemList)] : v))\n          })(this.bookShelf).filter(item => item.type === 1)\n          const book = flatShelf.filter(item => item.fileName === this.bookItem.fileName)\n          return book && book.length > 0\n        } else {\n          return false\n        }\n      }\n    },\n    data() {\n      return {\n        bookShelf: null,\n        bookItem: null,\n        book: null,\n        metadata: null,\n        trialRead: null,\n        cover: null,\n        navigation: null,\n        displayed: false,\n        audio: null,\n        randomLocation: null,\n        description: null,\n        toastText: '',\n        trialText: null,\n        categoryText: null,\n        opf: null\n      }\n    },\n    methods: {\n      addOrRemoveShelf() {\n        if (this.inBookShelf) {\n          removeFromBookShelf(this.bookItem)\n        } else {\n          addToShelf(this.bookItem)\n        }\n        this.bookShelf = getLocalStorage('bookShelf')\n      },\n      showToast(text) {\n        this.toastText = text\n        this.$refs.toast.show()\n      },\n      readBook() {\n        getLocalForage(this.bookItem.fileName, (err, value) => {\n          if (!err && value instanceof Blob) {\n            this.$router.push({\n              path: `/ebook/${this.bookItem.fileName}`\n            })\n          } else {\n            // this.showToast(this.$t('shelf.downloadFirst'))\n            this.$router.push({\n              path: `/ebook/${this.bookItem.fileName}`,\n              query: {\n                opf: this.opf\n              }\n            })\n          }\n        })\n      },\n      trialListening() {\n        getLocalForage(this.bookItem.fileName, (err, value) => {\n          if (!err && value instanceof Blob) {\n            this.$router.push({\n              path: '/book-store/book-speaking',\n              query: {\n                fileName: this.bookItem.fileName\n              }\n            })\n          } else {\n            // this.showToast(this.$t('shelf.downloadFirst'))\n            this.$router.push({\n              path: '/book-store/book-speaking',\n              query: {\n                fileName: this.bookItem.fileName,\n                opf: this.opf\n              }\n            })\n          }\n        })\n      },\n      read(item) {\n        getLocalForage(this.bookItem.fileName, (err, value) => {\n          if (!err && value instanceof Blob) {\n            this.$router.push({\n              path: `/ebook/${this.bookItem.fileName}`,\n              query: {\n                navigation: item.href\n              }\n            })\n          } else {\n            // this.showToast(this.$t('shelf.downloadFirst'))\n            this.$router.push({\n              path: `/ebook/${this.bookItem.fileName}`,\n              query: {\n                navigation: item.href,\n                opf: this.opf\n              }\n            })\n          }\n        })\n      },\n      itemStyle(item) {\n        return {\n          marginLeft: (item.deep - 1) * px2rem(20) + 'rem'\n        }\n      },\n      doFlatNavigation(content, deep = 1) {\n        const arr = []\n        content.forEach(item => {\n          item.deep = deep\n          arr.push(item)\n          if (item.subitems && item.subitems.length > 0) {\n            arr.push(this.doFlatNavigation(item.subitems, deep + 1))\n          }\n        })\n        return arr\n      },\n      initBook() {\n        if (this.bookItem) {\n          getLocalForage(this.bookItem.fileName, (err, blob) => {\n            if (err) {\n              this.downloadBook()\n            } else {\n              if (blob) {\n                this.parseBook(blob)\n              } else {\n                this.downloadBook()\n              }\n            }\n          })\n        }\n      },\n      downloadBook() {\n        const opf = `${process.env.VUE_APP_EPUB_URL}/${this.bookItem.categoryText}/${this.bookItem.fileName}/OEBPS/package.opf`\n        this.parseBook(opf)\n      },\n      parseBook(blob) {\n        this.book = new Epub(blob)\n        this.book.loaded.metadata.then(metadata => {\n          this.metadata = metadata\n        })\n        this.book.loaded.navigation.then(nav => {\n          this.navigation = nav\n          if (this.navigation.toc && this.navigation.toc.length > 1) {\n            this.display(this.navigation.toc[1].href)\n              .then(section => {\n                if (this.$refs.scroll) {\n                  this.$refs.scroll.refresh()\n                }\n                this.displayed = true\n                const reg = new RegExp('<.+?>', 'g')\n                const text = section.output.replace(reg, '').replace(/\\s\\s/g, '')\n                this.description = text\n              })\n          }\n        })\n      },\n      findBookFromList(fileName) {\n        flatList().then(response => {\n          if (response.status === 200) {\n            const bookList = response.data.data.filter(item => item.fileName === fileName)\n            if (bookList && bookList.length > 0) {\n              this.bookItem = bookList[0]\n              console.log(this.bookItem)\n              this.initBook()\n            }\n          }\n        })\n      },\n      init() {\n        const fileName = this.$route.query.fileName\n        this.categoryText = this.$route.query.category\n        if (fileName) {\n          detail({\n            fileName: fileName\n          }).then(response => {\n            if (response.status === 200 && response.data.error_code === 0 && response.data.data) {\n              const data = response.data.data\n              this.bookItem = data\n              this.cover = this.bookItem.cover\n              let rootFile = data.rootFile\n              if (rootFile.startsWith('/')) {\n                rootFile = rootFile.substring(1, rootFile.length)\n              }\n              this.opf = `${process.env.VUE_APP_EPUB_OPF_URL}/${fileName}/${rootFile}`\n              this.parseBook(this.opf)\n            } else {\n              this.showToast(response.data.msg)\n            }\n          })\n        }\n        this.bookShelf = getLocalStorage('bookShelf')\n      },\n      back() {\n        this.$router.go(-1)\n      },\n      display(location) {\n        if (this.$refs.preview) {\n          if (!this.rendition) {\n            this.rendition = this.book.renderTo('preview', {\n              width: window.innerWidth > 640 ? 640 : window.innerWidth,\n              height: window.innerHeight,\n              method: 'default'\n            })\n          }\n          if (!location) {\n            return this.rendition.display()\n          } else {\n            return this.rendition.display(location)\n          }\n        }\n      },\n      onScroll(offsetY) {\n        if (offsetY > realPx(42)) {\n          this.$refs.title.showShadow()\n        } else {\n          this.$refs.title.hideShadow()\n        }\n      }\n    },\n    mounted() {\n      this.init()\n    }\n  }\n</script>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n  @import \"../../assets/styles/global\";\n\n  .book-detail {\n    width: 100%;\n    background: white;\n    .content-wrapper {\n      width: 100%;\n      .book-detail-content-wrapper {\n        width: 100%;\n        border-bottom: px2rem(1) solid #eee;\n        box-sizing: border-box;\n        .book-detail-content-title {\n          font-size: px2rem(20);\n          font-weight: bold;\n          padding: px2rem(20) px2rem(15) px2rem(10) px2rem(15);\n          box-sizing: border-box;\n        }\n        .book-detail-content-list-wrapper {\n          padding: px2rem(10) px2rem(15);\n          box-sizing: border-box;\n          .loading-text-wrapper {\n            width: 100%;\n            .loading-text {\n              font-size: px2rem(14);\n              color: #666;\n            }\n          }\n          .book-detail-content-row {\n            display: flex;\n            box-sizing: border-box;\n            margin-bottom: px2rem(10);\n            .book-detail-content-label {\n              flex: 0 0 px2rem(70);\n              font-size: px2rem(14);\n              color: #666;\n            }\n            .book-detail-content-text {\n              flex: 1;\n              font-size: px2rem(14);\n              color: #333;\n            }\n          }\n          #preview {\n          }\n          .book-detail-content-item-wrapper {\n            .book-detail-content-item {\n              padding: px2rem(15) 0;\n              font-size: px2rem(14);\n              line-height: px2rem(16);\n              color: #666;\n              border-bottom: px2rem(1) solid #eee;\n              &:last-child {\n                border-bottom: none;\n              }\n              .book-detail-content-navigation-text {\n                width: 100%;\n                @include ellipsis;\n                &.is-sub {\n                  color: #666;\n                }\n              }\n            }\n          }\n        }\n      }\n      .audio-wrapper {\n        width: 100%;\n        padding: px2rem(15);\n        box-sizing: border-box;\n        #audio {\n          width: 100%;\n        }\n      }\n    }\n    .bottom-wrapper {\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      z-index: 120;\n      display: flex;\n      width: 100%;\n      height: px2rem(52);\n      box-shadow: 0 px2rem(-2) px2rem(2) rgba(0, 0, 0, .1);\n      .bottom-btn {\n        flex: 1;\n        color: $color-blue;\n        font-weight: bold;\n        font-size: px2rem(14);\n        @include center;\n        &:active {\n          color: $color-blue-transparent;\n        }\n        .icon-check {\n          margin-right: px2rem(5);\n        }\n      }\n      &.hide-shadow {\n        box-shadow: none;\n      }\n    }\n  }\n</style>\n"]}]}