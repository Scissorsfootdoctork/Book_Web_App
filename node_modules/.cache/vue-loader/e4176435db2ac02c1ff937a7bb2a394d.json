{"remainingRequest":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/components/shelf/bookShelfFooter.vue?vue&type=style&index=0&id=65d06877&lang=scss&rel=stylesheet%2Fscss&scoped=true&","dependencies":[{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/components/shelf/bookShelfFooter.vue","mtime":1541580605000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../../assets/styles/global\";\n\n.book-shelf-footer {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  z-index: 120;\n  display: flex;\n  width: 100%;\n  height: px2rem(48);\n  background: white;\n  box-shadow: 0 px2rem(-2) px2rem(4) 0 rgba(0, 0, 0, .1);\n  .book-shelf-tab-wrapper {\n    flex: 1;\n    width: 25%;\n    height: 100%;\n    .book-shelf-tab {\n      width: 100%;\n      height: 100%;\n      @include columnCenter;\n      .tab-icon {\n        font-size: px2rem(20);\n        color: #666;\n        opacity: .5;\n        &.icon-shelf {\n          color: $color-pink;\n        }\n        &.icon-download {\n          font-size: px2rem(22);\n        }\n        &.is-selected {\n          opacity: 1;\n        }\n      }\n      .tab-text {\n        margin-top: px2rem(5);\n        font-size: px2rem(12);\n        color: #666;\n        opacity: .5;\n        &.remove-text {\n          color: $color-pink;\n        }\n        &.is-selected {\n          opacity: 1;\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["bookShelfFooter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkNA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bookShelfFooter.vue","sourceRoot":"src/components/shelf","sourcesContent":["<template>\n  <div class=\"book-shelf-footer\">\n    <div class=\"book-shelf-tab-wrapper\" v-for=\"(item, index) in tabs\" :key=\"index\" @click=\"onTabClick(item)\">\n      <div class=\"book-shelf-tab\">\n        <div class=\"icon-private tab-icon\" :class=\"{'is-selected': isSelected}\"\n             v-if=\"item.index === 1 && !isPrivate\"></div>\n        <div class=\"icon-private-see tab-icon\" :class=\"{'is-selected': isSelected}\"\n             v-if=\"item.index === 1 && isPrivate\"></div>\n        <div class=\"icon-download tab-icon\" :class=\"{'is-selected': isSelected}\"\n             v-if=\"item.index === 2 && !isDownload\"></div>\n        <div class=\"icon-download-remove tab-icon\" :class=\"{'is-selected': isSelected}\"\n             v-if=\"item.index === 2 && isDownload\"></div>\n        <div class=\"icon-move tab-icon\" :class=\"{'is-selected': isSelected}\" v-if=\"item.index === 3\"></div>\n        <div class=\"icon-shelf tab-icon\" :class=\"{'is-selected': isSelected}\" v-if=\"item.index === 4\"></div>\n        <div class=\"tab-text\" :class=\"{'remove-text': item.index === 4, 'is-selected': isSelected}\">{{label(item)}}\n        </div>\n      </div>\n    </div>\n    <popup ref=\"popup\"\n           :title=\"popTitle\"\n           :confirmText=\"confirmText\"\n           :isRemoveText=\"isRemoveText\"\n           :cancelText=\"$t('shelf.cancel')\"\n           @confirm=\"onConfirm\"></popup>\n    <shelf-group-dialog :visible.sync=\"ifGroupDialogShow\"\n                        :data=\"data\"\n                        :bookList=\"bookList\"\n                        :category=\"category\"\n                        :isInGroup=\"isInGroup\"\n                        @group=\"groupEdit\"></shelf-group-dialog>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import Popup from '@/components/shelf/popup'\n  import ShelfGroupDialog from '@/components/shelf/shelfGroupDialog'\n\n  export default {\n    props: {\n      data: Array,\n      isInGroup: Boolean,\n      bookList: Array,\n      category: Object\n    },\n    components: {\n      ShelfGroupDialog,\n      Popup\n    },\n    computed: {\n      selectedBooks() {\n        const selectedBooks = []\n        this.data.forEach(item => {\n          if (item.selected) {\n            selectedBooks.push(item)\n          }\n        })\n        return selectedBooks\n      },\n      isSelected() {\n        if (this.data) {\n          return this.data.some(item => item.selected)\n        } else {\n          return false\n        }\n      },\n      isPrivate() {\n        if (!this.isSelected) {\n          return false\n        } else {\n          return this.data.every(item => {\n            if (item.selected) {\n              return item.private\n            } else {\n              return true\n            }\n          })\n        }\n      },\n      isDownload() {\n        if (!this.isSelected) {\n          return false\n        } else {\n          return this.data.every(item => {\n            if (item.selected) {\n              return item.cache\n            } else {\n              return true\n            }\n          })\n        }\n      },\n      tabs() {\n        return [\n          {\n            label: this.$t('shelf.private'),\n            label2: this.$t('shelf.noPrivate'),\n            index: 1\n          },\n          {\n            label: this.$t('shelf.download'),\n            label2: this.$t('shelf.delete'),\n            index: 2\n          },\n          {\n            label: this.$t('shelf.move'),\n            index: 3\n          },\n          {\n            label: this.$t('shelf.remove'),\n            index: 4\n          }\n        ]\n      }\n    },\n    data() {\n      return {\n        popTitle: '',\n        confirmText: '',\n        isRemoveText: false,\n        ifShowPopup: false,\n        ifGroupDialogShow: false,\n        onConfirm: function() {}\n      }\n    },\n    methods: {\n      label(item) {\n        switch (item.index) {\n          case 1:\n            return this.isPrivate ? item.label2 : item.label\n          case 2:\n            return this.isDownload ? item.label2 : item.label\n          default:\n            return item.label\n        }\n      },\n      removeBook() {\n        this.$emit('removeBook')\n      },\n      onSetDownload() {\n        this.$emit('setDownload', true)\n      },\n      onRemoveDownload() {\n        this.$emit('setDownload', false)\n      },\n      onSetPrivate() {\n        this.$emit('setPrivate', true)\n      },\n      onCancelPrivate() {\n        this.$emit('setPrivate', false)\n      },\n      onTabClick(item) {\n        if (item.index === 1) {\n          this.showPrivate()\n        } else if (item.index === 2) {\n          this.showDownload()\n        } else if (item.index === 3) {\n          this.showGroupDialog()\n        } else if (item.index === 4) {\n          this.showRemove()\n        }\n      },\n      showGroupDialog() {\n        if (this.isSelected) {\n          this.ifGroupDialogShow = true\n        }\n      },\n      showRemove() {\n        if (this.isSelected) {\n          let msg\n          if (this.selectedBooks.length === 1) {\n            msg = this.$t('shelf.removeBookTitle').replace('$1', '《' + this.selectedBooks[0].title + '》')\n          } else {\n            msg = this.$t('shelf.removeBookTitle').replace('$1', this.$t('shelf.selectedBooks'))\n          }\n          this.showPopup(msg, this.$t('shelf.removeBook'), this.removeBook, true)\n        }\n      },\n      showDownload() {\n        if (this.isSelected) {\n          if (!this.isDownload) {\n            this.showPopup(this.$t('shelf.setDownloadTitle'), this.$t('shelf.open'), this.onSetDownload)\n          } else {\n            this.showPopup(this.$t('shelf.removeDownloadTitle'), this.$t('shelf.delete'), this.onRemoveDownload, true)\n          }\n        }\n      },\n      showPrivate() {\n        if (this.isSelected) {\n          if (!this.isPrivate) {\n            this.showPopup(this.$t('shelf.setPrivateTitle'), this.$t('shelf.open'), this.onSetPrivate)\n          } else {\n            this.showPopup(this.$t('shelf.closePrivateTitle'), this.$t('shelf.close'), this.onCancelPrivate)\n          }\n        }\n      },\n      showPopup(title, confirmText, onConfirm, isRemoveText = false) {\n        this.popTitle = title\n        this.confirmText = confirmText\n        this.onConfirm = onConfirm\n        this.isRemoveText = isRemoveText\n        this.$refs.popup.show()\n      },\n      groupEdit(operation, group) {\n        this.$emit('groupEdit', operation, group)\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n  @import \"../../assets/styles/global\";\n\n  .book-shelf-footer {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    z-index: 120;\n    display: flex;\n    width: 100%;\n    height: px2rem(48);\n    background: white;\n    box-shadow: 0 px2rem(-2) px2rem(4) 0 rgba(0, 0, 0, .1);\n    .book-shelf-tab-wrapper {\n      flex: 1;\n      width: 25%;\n      height: 100%;\n      .book-shelf-tab {\n        width: 100%;\n        height: 100%;\n        @include columnCenter;\n        .tab-icon {\n          font-size: px2rem(20);\n          color: #666;\n          opacity: .5;\n          &.icon-shelf {\n            color: $color-pink;\n          }\n          &.icon-download {\n            font-size: px2rem(22);\n          }\n          &.is-selected {\n            opacity: 1;\n          }\n        }\n        .tab-text {\n          margin-top: px2rem(5);\n          font-size: px2rem(12);\n          color: #666;\n          opacity: .5;\n          &.remove-text {\n            color: $color-pink;\n          }\n          &.is-selected {\n            opacity: 1;\n          }\n        }\n      }\n    }\n  }\n</style>\n"]}]}