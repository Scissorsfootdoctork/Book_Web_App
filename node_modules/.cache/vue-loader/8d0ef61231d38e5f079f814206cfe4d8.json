{"remainingRequest":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/components/shelf/shelfFooter.vue?vue&type=style&index=0&id=01acc420&scoped=true&lang=scss&","dependencies":[{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/components/shelf/shelfFooter.vue","mtime":1590725594808},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9zdHlsZXMvZ2xvYmFsIjsKCi5zaGVsZi1mb290ZXIgewogICAgcG9zaXRpb246IGZpeGVkOwogICAgYm90dG9tOiAwOwogICAgbGVmdDogMDsKICAgIHotaW5kZXg6IDEyMDsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogcHgycmVtKDQ4KTsKICAgIGJhY2tncm91bmQ6IHdoaXRlOwogICAgYm94LXNoYWRvdzogMCBweDJyZW0oLTIpIHB4MnJlbSg0KSAwIHJnYmEoMCwgMCwgMCwgLjEpOwoKICAgIC5zaGVsZi1mb290ZXItdGFiLXdyYXBwZXIgewogICAgICAgIGZsZXg6IDE7CiAgICAgICAgd2lkdGg6IDI1JTsKICAgICAgICBoZWlnaHQ6IDEwMCU7CgogICAgICAgIC5zaGVsZi1mb290ZXItdGFiIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICAgICAgb3BhY2l0eTogLjU7CiAgICAgICAgICAgIEBpbmNsdWRlIGNvbHVtbkNlbnRlcjsKCiAgICAgICAgICAgICYuaXMtc2VsZWN0ZWQgewogICAgICAgICAgICAgICAgb3BhY2l0eTogMTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLnRhYi1pY29uIHsKICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogcHgycmVtKDIwKTsKICAgICAgICAgICAgICAgIGNvbG9yOiAjNjY2OwogICAgICAgICAgICB9CgogICAgICAgICAgICAudGFiLXRleHQgewogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogcHgycmVtKDUpOwogICAgICAgICAgICAgICAgZm9udC1zaXplOiBweDJyZW0oMTIpOwogICAgICAgICAgICAgICAgY29sb3I6ICM2NjY7CgogICAgICAgICAgICAgICAgJi5yZW1vdmUtdGV4dCB7CiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRjb2xvci1waW5rOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAuaWNvbi1zaGVsZiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLXBpbms7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["shelfFooter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6PA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"shelfFooter.vue","sourceRoot":"src/components/shelf","sourcesContent":["<template>\n    <div class=\"shelf-footer\" v-show=\"isEditMode\">\n        <div class=\"shelf-footer-tab-wrapper\" v-for=\"item in tabs\" :key=\"item.index\" @click=\"onTabClick(item)\">\n            <div class=\"shelf-footer-tab\" :class=\"{'is-selected': isSelected}\">\n                <div class=\"icon-private tab-icon\" v-if=\"item.index === 1 && !isPrivate\"></div>\n                <div class=\"icon-private-see tab-icon\" v-if=\"item.index === 1 && isPrivate\"></div>\n                <div class=\"icon-download tab-icon\" v-if=\"item.index === 2 && !isDownload\"></div>\n                <div class=\"icon-download-remove tab-icon\" v-if=\"item.index === 2 && isDownload\"></div>\n                <div class=\"icon-move tab-icon\" v-if=\"item.index === 3\"></div>\n                <div class=\"icon-shelf tab-icon\" v-if=\"item.index === 4\"></div>\n                <div class=\"tab-text\" :class=\"{'remove-text': item.index === 4}\">{{label(item)}}</div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { storeShelfMixin } from '../../utils/mixin'\n    import { saveBookShelf, removeLocalStorage } from '../../utils/localstorage'\n    import { download } from '../../api/store'\n    import { removeLocalForage } from '../../utils/localForage'\n\n    export default {\n        mixins: [storeShelfMixin],\n        computed: {\n            isSelected() {\n                return this.shelfSelected && this.shelfSelected.length > 0\n            },\n            tabs() {\n                return [\n                    {\n                        label: this.$t('shelf.private'),\n                        label2: this.$t('shelf.noPrivate'),\n                        index: 1\n                    },\n                    {\n                        label: this.$t('shelf.download'),\n                        label2: this.$t('shelf.delete'),\n                        index: 2\n                    },\n                    {\n                        label: this.$t('shelf.move'),\n                        index: 3\n                    },\n                    {\n                        label: this.$t('shelf.remove'),\n                        index: 4\n                    }\n                ]\n            },\n            isPrivate() {\n                if (!this.isSelected) {\n                    return false\n                } else {\n                    return this.shelfSelected.every(item => item.private)\n                }\n            },\n            isDownload() {\n                if (!this.isSelected) {\n                    return false\n                } else {\n                    return this.shelfSelected.every(item => item.cache)\n                }\n            }\n        },\n        data() {\n            return {\n                popupMenu: null\n            }\n        },\n        methods: {\n            async downloadSelectedBook() {\n                for (let i = 0; i < this.shelfSelected.length; i++) {\n                    await this.downloadBook(this.shelfSelected[i]).then(book => {\n                        book.cache = true\n                    })\n                }\n            },\n            downloadBook(book) {\n                let text = ''\n                const toast = this.toast({\n                    text\n                })\n                toast.continueShow()\n                return new Promise((resolve, reject) => {\n                    download(book, book => {\n                        toast.remove()\n                        resolve(book)\n                    }, reject, progressEvent => {\n                        const progress = Math.floor(progressEvent.loaded / progressEvent.total * 100) + '%'\n                        text = this.$t('shelf.progressDownload').replace('$1', `${book.fileName}.epub(${progress})`)\n                        toast.updateText(text)\n                    })\n                })\n            },\n            removeSelectedBook() {\n                Promise.all(this.shelfSelected.map(book => this.removeBook(book))).then(books => {\n                    books.map(book => {\n                        book.cache = false\n                    })\n                    saveBookShelf(this.shelfList)\n                    this.simpleToast(this.$t('shelf.removeDownloadSuccess'))\n                })\n            },\n            removeBook(book) {\n                return new Promise((resolve, reject) => {\n                    removeLocalStorage(`${book.categoryText}/${book.fileName}-info`)\n                    removeLocalForage(`${book.fileName}`)\n                    resolve(book)\n                })\n            },\n            hidePopup() {\n                this.popupMenu.hide()\n            },\n            onComplete() {\n                this.hidePopup()\n                this.setIsEditMode(false)\n                saveBookShelf(this.shelfList)\n            },\n            setPrivate() {\n                let isPrivate\n                if (this.isPrivate) {\n                    isPrivate = false\n                } else {\n                    isPrivate = true\n                }\n                this.shelfSelected.forEach(book => {\n                    book.private = isPrivate\n                })\n                this.onComplete()\n                if (isPrivate) {\n                    this.simpleToast(this.$t('shelf.setPrivateSuccess'))\n                } else {\n                    this.simpleToast(this.$t('shelf.closePrivateSuccess'))\n                }\n            },\n            async setDownload() {\n                this.onComplete()\n                if (this.isDownload) {\n                    this.removeSelectedBook()\n                } else {\n                    await this.downloadSelectedBook()\n                    saveBookShelf(this.shelfList)\n                    this.simpleToast(this.$t('shelf.setDownloadSuccess'))\n                }\n            },\n            removeSelected() {\n                this.shelfSelected.forEach(selected => {\n                    this.setShelfList(this.shelfList.filter(book => book !== selected))\n                })\n                this.setShelfSelected([])\n                this.onComplete()\n            },\n            showPrivate() {\n                this.popupMenu = this.popup({\n                    title: this.isPrivate ? this.$t('shelf.closePrivateTitle') : this.$t('shelf.setPrivateTitle'),\n                    btn: [\n                        {\n                            text: this.isPrivate ? this.$t('shelf.close') : this.$t('shelf.open'),\n                            click: () => {\n                                this.setPrivate()\n                            }\n                        },\n                        {\n                            text: this.$t('shelf.cancel'),\n                            click: () => {\n                                this.hidePopup()\n                            }\n                        }\n                    ]\n                }).show()\n            },\n            showDownload() {\n                this.popupMenu = this.popup({\n                    title: this.isDownload ? this.$t('shelf.removeDownloadTitle') : this.$t('shelf.setDownloadTitle'),\n                    btn: [\n                        {\n                            text: this.isDownload ? this.$t('shelf.delete') : this.$t('shelf.open'),\n                            click: () => {\n                                this.setDownload()\n                            }\n                        },\n                        {\n                            text: this.$t('shelf.cancel'),\n                            click: () => {\n                                this.hidePopup()\n                            }\n                        }\n                    ]\n                }).show()\n            },\n            showRemove() {\n                let title\n                if (this.shelfSelected.length === 1) {\n                    title = this.$t('shelf.removeBookTitle').replace('$1', `《${this.shelfSelected[0].title}》`)\n                } else {\n                    title = this.$t('shelf.removeBookTitle').replace('$1', this.$t('shelf.selectedBooks'))\n                }\n                this.popupMenu = this.popup({\n                    title: title,\n                    btn: [\n                        {\n                            text: this.$t('shelf.removeBook'),\n                            type: 'danger',\n                            click: () => {\n                                this.removeSelected()\n                            }\n                        },\n                        {\n                            text: this.$t('shelf.cancel'),\n                            click: () => {\n                                this.hidePopup()\n                            }\n                        }\n                    ]\n                }).show()\n            },\n            onTabClick(item) {\n                if (!this.isSelected) {\n                    return\n                }\n                switch (item.index) {\n                    case 1:\n                        this.showPrivate()\n                        break\n                    case 2:\n                        this.showDownload()\n                        break\n                    case 3:\n                        this.dialog().show()\n                        break\n                    case 4:\n                        this.showRemove()\n                        break\n                    default:\n                        break\n                }\n            },\n            label(item) {\n                switch (item.index) {\n                    case 1:\n                        return this.isPrivate ? item.label2 : item.label\n                    case 2:\n                        return this.isDownload ? item.label2 : item.label\n                    default:\n                        return item.label\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    @import \"../../assets/styles/global\";\n\n    .shelf-footer {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        z-index: 120;\n        display: flex;\n        width: 100%;\n        height: px2rem(48);\n        background: white;\n        box-shadow: 0 px2rem(-2) px2rem(4) 0 rgba(0, 0, 0, .1);\n\n        .shelf-footer-tab-wrapper {\n            flex: 1;\n            width: 25%;\n            height: 100%;\n\n            .shelf-footer-tab {\n                width: 100%;\n                height: 100%;\n                opacity: .5;\n                @include columnCenter;\n\n                &.is-selected {\n                    opacity: 1;\n                }\n\n                .tab-icon {\n                    font-size: px2rem(20);\n                    color: #666;\n                }\n\n                .tab-text {\n                    margin-top: px2rem(5);\n                    font-size: px2rem(12);\n                    color: #666;\n\n                    &.remove-text {\n                        color: $color-pink;\n                    }\n                }\n\n                .icon-shelf {\n                    color: $color-pink;\n                }\n            }\n        }\n    }\n</style>\n"]}]}