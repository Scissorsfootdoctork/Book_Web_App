{"remainingRequest":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/components/shelf/shelfTitle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/components/shelf/shelfTitle.vue","mtime":1541580605000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Popup from '@/components/shelf/popup'\nimport ShelfGroupDialog from '@/components/shelf/shelfGroupDialog'\nimport { switchLocale } from '@/utils/book'\n\nexport default {\n  components: {\n    ShelfGroupDialog,\n    Popup\n  },\n  props: {\n    isEditMode: Boolean,\n    ifShowBack: Boolean,\n    ifShowClear: Boolean,\n    ifGroupEmpty: Boolean,\n    data: Array,\n    title: String,\n    category: Object\n  },\n  computed: {\n    isDataEmpty() {\n      return !this.data || this.data.filter(item => item.type !== 3).length === 0\n    },\n    selectedText() {\n      return this.selectedNumber === 0 ? this.$t('shelf.selectBook') : (this.selectedNumber === 1 ? this.$t('shelf.haveSelectedBook').replace('$1', this.selectedNumber) : this.$t('shelf.haveSelectedBooks').replace('$1', this.selectedNumber))\n    },\n    selectedNumber() {\n      if (this.category && this.category.itemList) {\n        return this.category.itemList.filter(item => item.selected).length\n      } else if (this.data) {\n        return this.data.filter(item => item.selected).length\n      } else {\n        return 0\n      }\n    },\n    thirdText() {\n      if (this.isDeleteGroup) {\n        return ''\n      } else {\n        return this.$t('shelf.editGroupName')\n      }\n    },\n    popupTitle() {\n      if (this.isDeleteGroup) {\n        return this.$t('shelf.deleteGroupTitle')\n      } else {\n        return ''\n      }\n    },\n    confirmText() {\n      if (this.isDeleteGroup) {\n        return this.$t('shelf.confirm')\n      } else {\n        return this.$t('shelf.deleteGroup')\n      }\n    }\n  },\n  data() {\n    return {\n      ifHideShadow: true,\n      ifGroupDialogShow: false,\n      isDeleteGroup: false\n    }\n  },\n  methods: {\n    changeLanguage() {\n      switchLocale(this)\n    },\n    editGroupName(category, groupName) {\n      this.$emit('editGroupName', category, groupName)\n    },\n    showPopup() {\n      this.$refs.popup.show()\n    },\n    onPopupDelete() {\n      if (this.isDeleteGroup) {\n        this.$emit('deleteGroup', this.category)\n        this.isDeleteGroup = false\n      } else {\n        this.$refs.popup.hide()\n        setTimeout(() => {\n          this.isDeleteGroup = true\n          this.$refs.popup.show()\n        }, 200)\n      }\n    },\n    onPopupChange() {\n      this.ifGroupDialogShow = true\n      this.$refs.groupDialog.showEditGroupDialog()\n    },\n    changeGroup() {\n      this.showPopup()\n    },\n    back() {\n      this.$router.go(-1)\n    },\n    clearCache() {\n      this.$emit('clearCache')\n    },\n    showShadow() {\n      this.ifHideShadow = false\n    },\n    hideShadow() {\n      this.ifHideShadow = true\n    },\n    onEditClick() {\n      if (this.isEditMode) {\n        this.$emit('onEditClick', false)\n      } else {\n        this.$emit('onEditClick', true)\n      }\n    }\n  }\n}\n",{"version":3,"sources":["shelfTitle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shelfTitle.vue","sourceRoot":"src/components/shelf","sourcesContent":["<template>\n  <transition name=\"fade\">\n    <div class=\"shelf-title-wrapper\" :class=\"{'hide-shadow': ifHideShadow}\">\n      <div class=\"title\">\n        <span class=\"title-text\">{{title}}</span>\n        <span class=\"sub-title-text\" v-show=\"isEditMode\">{{selectedText}}</span>\n      </div>\n      <div class=\"btn-text-wrapper\" @click=\"onEditClick\" v-if=\"!ifGroupEmpty && !isDataEmpty\">\n        <span class=\"btn-text\">{{isEditMode ? $t('shelf.cancel') : $t('shelf.edit')}}</span>\n      </div>\n      <div class=\"btn-text-wrapper\" @click=\"changeGroup\" v-if=\"ifGroupEmpty && !isDataEmpty\">\n        <span class=\"btn-text\">{{$t('shelf.editGroup')}}</span>\n      </div>\n      <div class=\"btn-text-wrapper\" @click=\"changeLanguage\" v-if=\"isDataEmpty\">\n        <span class=\"btn-text\">{{$t('shelf.changeLanguage')}}</span>\n      </div>\n      <div class=\"btn-clear-wrapper\" @click=\"clearCache\" v-if=\"ifShowClear && !isDataEmpty\">\n        <span class=\"btn-clear\">{{$t('shelf.clearCache')}}</span>\n      </div>\n      <div class=\"btn-back-wrapper\" @click=\"back\" v-if=\"ifShowBack && !isEditMode\">\n        <span class=\"icon-back\"></span>\n      </div>\n      <div class=\"btn-back-wrapper\" @click=\"changeGroup\" v-if=\"ifShowBack && isEditMode\">\n        <span class=\"btn-text\">{{$t('shelf.editGroup')}}</span>\n      </div>\n      <popup ref=\"popup\"\n             :title=\"popupTitle\"\n             :thirdText=\"thirdText\"\n             :confirmText=\"confirmText\"\n             :isRemoveText=\"true\"\n             :cancelText=\"$t('shelf.cancel')\"\n             @confirm=\"onPopupDelete\"\n             @third=\"onPopupChange\"></popup>\n      <shelf-group-dialog :visible.sync=\"ifGroupDialogShow\"\n                          :isEditGroupName=\"true\"\n                          :category=\"category\"\n                          @editGroupName=\"editGroupName\"\n                          ref=\"groupDialog\"></shelf-group-dialog>\n    </div>\n  </transition>\n</template>\n\n<script>\n  import Popup from '@/components/shelf/popup'\n  import ShelfGroupDialog from '@/components/shelf/shelfGroupDialog'\n  import { switchLocale } from '@/utils/book'\n\n  export default {\n    components: {\n      ShelfGroupDialog,\n      Popup\n    },\n    props: {\n      isEditMode: Boolean,\n      ifShowBack: Boolean,\n      ifShowClear: Boolean,\n      ifGroupEmpty: Boolean,\n      data: Array,\n      title: String,\n      category: Object\n    },\n    computed: {\n      isDataEmpty() {\n        return !this.data || this.data.filter(item => item.type !== 3).length === 0\n      },\n      selectedText() {\n        return this.selectedNumber === 0 ? this.$t('shelf.selectBook') : (this.selectedNumber === 1 ? this.$t('shelf.haveSelectedBook').replace('$1', this.selectedNumber) : this.$t('shelf.haveSelectedBooks').replace('$1', this.selectedNumber))\n      },\n      selectedNumber() {\n        if (this.category && this.category.itemList) {\n          return this.category.itemList.filter(item => item.selected).length\n        } else if (this.data) {\n          return this.data.filter(item => item.selected).length\n        } else {\n          return 0\n        }\n      },\n      thirdText() {\n        if (this.isDeleteGroup) {\n          return ''\n        } else {\n          return this.$t('shelf.editGroupName')\n        }\n      },\n      popupTitle() {\n        if (this.isDeleteGroup) {\n          return this.$t('shelf.deleteGroupTitle')\n        } else {\n          return ''\n        }\n      },\n      confirmText() {\n        if (this.isDeleteGroup) {\n          return this.$t('shelf.confirm')\n        } else {\n          return this.$t('shelf.deleteGroup')\n        }\n      }\n    },\n    data() {\n      return {\n        ifHideShadow: true,\n        ifGroupDialogShow: false,\n        isDeleteGroup: false\n      }\n    },\n    methods: {\n      changeLanguage() {\n        switchLocale(this)\n      },\n      editGroupName(category, groupName) {\n        this.$emit('editGroupName', category, groupName)\n      },\n      showPopup() {\n        this.$refs.popup.show()\n      },\n      onPopupDelete() {\n        if (this.isDeleteGroup) {\n          this.$emit('deleteGroup', this.category)\n          this.isDeleteGroup = false\n        } else {\n          this.$refs.popup.hide()\n          setTimeout(() => {\n            this.isDeleteGroup = true\n            this.$refs.popup.show()\n          }, 200)\n        }\n      },\n      onPopupChange() {\n        this.ifGroupDialogShow = true\n        this.$refs.groupDialog.showEditGroupDialog()\n      },\n      changeGroup() {\n        this.showPopup()\n      },\n      back() {\n        this.$router.go(-1)\n      },\n      clearCache() {\n        this.$emit('clearCache')\n      },\n      showShadow() {\n        this.ifHideShadow = false\n      },\n      hideShadow() {\n        this.ifHideShadow = true\n      },\n      onEditClick() {\n        if (this.isEditMode) {\n          this.$emit('onEditClick', false)\n        } else {\n          this.$emit('onEditClick', true)\n        }\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n  @import \"../../assets/styles/global\";\n\n  .shelf-title-wrapper {\n    position: relative;\n    z-index: 130;\n    width: 100%;\n    height: px2rem(42);\n    background: white;\n    box-shadow: 0 px2rem(2) px2rem(2) 0 rgba(0, 0, 0, .1);\n    &.hide-shadow {\n      box-shadow: none;\n    }\n    .title {\n      position: absolute;\n      top: 0;\n      left: 0;\n      z-index: 110;\n      width: 100%;\n      height: px2rem(42);\n      @include columnCenter;\n      .title-text {\n        font-size: px2rem(16);\n        line-height: px2rem(20);\n        font-weight: bold;\n        color: #333;\n      }\n      .sub-title-text {\n        font-size: px2rem(10);\n        color: #333;\n      }\n    }\n    .btn-text-wrapper {\n      position: absolute;\n      right: 0;\n      top: 0;\n      z-index: 115;\n      padding-right: px2rem(16.5);\n      box-sizing: border-box;\n      height: 100%;\n      @include center;\n      .btn-text {\n        font-size: px2rem(14);\n        color: #666;\n      }\n    }\n    .btn-clear-wrapper {\n      position: absolute;\n      left: 0;\n      top: 0;\n      z-index: 115;\n      padding-left: px2rem(16.5);\n      box-sizing: border-box;\n      height: 100%;\n      @include center;\n      .btn-clear {\n        font-size: px2rem(14);\n        color: #666;\n      }\n    }\n    .btn-back-wrapper {\n      position: absolute;\n      left: 0;\n      top: 0;\n      z-index: 115;\n      padding-left: px2rem(16.5);\n      box-sizing: border-box;\n      height: 100%;\n      font-size: px2rem(20);\n      color: #666;\n      @include center;\n      &:active {\n        color: rgba(102, 102, 102, .5);\n      }\n      .btn-text {\n        font-size: px2rem(14);\n        color: #666;\n      }\n    }\n  }\n</style>\n"]}]}