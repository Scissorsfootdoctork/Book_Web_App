{"remainingRequest":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/views/ebook/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/src/views/ebook/index.vue","mtime":1590881492374},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kscissorfootdoctor/Desktop/Book_Web_App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport EbookTitle from '@/components/ebook/EbookTitle'\nimport EbookMenu from '@/components/ebook/EbookMenu'\nimport { ebookMixin } from '@/utils/mixin'\nimport { getReadTime, saveReadTime } from '../../utils/localStorage'\nimport EbookHeader from '../../components/ebook/EbookHeader'\nimport EbookFooter from '../../components/ebook/EbookFooter'\nimport EbookBookmark from '../../components/ebook/EbookBookmark'\n\nexport default {\n  mixins: [ebookMixin],\n  components: {\n    EbookBookmark,\n    EbookFooter,\n    EbookHeader,\n    EbookTitle,\n    EbookMenu\n  },\n  watch: {\n    offsetY(v) {\n      if (this.isPaginating !== null && this.isPaginating === false && !this.menuVisible) {\n        if (v === 0) {\n          this.restore()\n        } else if (v > 0) {\n          this.move(v)\n        }\n      }\n    }\n  },\n  methods: {\n    restore() {\n      this.$refs.ebookView.style.top = 0\n      this.$refs.ebookView.style.transition = 'all .2s linear'\n      setTimeout(() => {\n        this.$refs.ebookView.style.transition = ''\n      }, 200)\n    },\n    move(offsetY) {\n      this.$refs.ebookView.style.top = offsetY + 'px'\n    },\n    startLoopReadTime() {\n      let readTime = getReadTime(name)\n      if (!readTime) {\n        readTime = 0\n      }\n      this.task = setInterval(() => {\n        readTime++\n        if (readTime % 30 === 0) {\n          saveReadTime(this.fileName, readTime)\n        }\n      }, 1000)\n    }\n  },\n  created() {\n    this.setGlobalTheme()\n  },\n  mounted() {\n    this.startLoopReadTime()\n  },\n  beforeDestroy() {\n    if (this.task) {\n      clearInterval(this.task)\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/ebook","sourcesContent":["<template>\n    <div class=\"ebook\" ref=\"ebookView\">\n        <ebook-bookmark></ebook-bookmark>\n        <ebook-header></ebook-header>\n        <ebook-title></ebook-title>\n        <router-view></router-view>\n        <ebook-menu></ebook-menu>\n        <ebook-footer></ebook-footer>\n    </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import EbookTitle from '@/components/ebook/EbookTitle'\n  import EbookMenu from '@/components/ebook/EbookMenu'\n  import { ebookMixin } from '@/utils/mixin'\n  import { getReadTime, saveReadTime } from '../../utils/localStorage'\n  import EbookHeader from '../../components/ebook/EbookHeader'\n  import EbookFooter from '../../components/ebook/EbookFooter'\n  import EbookBookmark from '../../components/ebook/EbookBookmark'\n\n  export default {\n    mixins: [ebookMixin],\n    components: {\n      EbookBookmark,\n      EbookFooter,\n      EbookHeader,\n      EbookTitle,\n      EbookMenu\n    },\n    watch: {\n      offsetY(v) {\n        if (this.isPaginating !== null && this.isPaginating === false && !this.menuVisible) {\n          if (v === 0) {\n            this.restore()\n          } else if (v > 0) {\n            this.move(v)\n          }\n        }\n      }\n    },\n    methods: {\n      restore() {\n        this.$refs.ebookView.style.top = 0\n        this.$refs.ebookView.style.transition = 'all .2s linear'\n        setTimeout(() => {\n          this.$refs.ebookView.style.transition = ''\n        }, 200)\n      },\n      move(offsetY) {\n        this.$refs.ebookView.style.top = offsetY + 'px'\n      },\n      startLoopReadTime() {\n        let readTime = getReadTime(name)\n        if (!readTime) {\n          readTime = 0\n        }\n        this.task = setInterval(() => {\n          readTime++\n          if (readTime % 30 === 0) {\n            saveReadTime(this.fileName, readTime)\n          }\n        }, 1000)\n      }\n    },\n    created() {\n      this.setGlobalTheme()\n    },\n    mounted() {\n      this.startLoopReadTime()\n    },\n    beforeDestroy() {\n      if (this.task) {\n        clearInterval(this.task)\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n    @import \"../../assets/styles/global\";\n\n    .ebook {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n    }\n</style>\n"]}]}